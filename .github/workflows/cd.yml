name: CD
on:
  pull_request:
    types: [closed]
  release:
    types: [published]
jobs:
  release:
    name: Release
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Run release drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy
    needs: release
    if: always() && github.event_name == 'release'
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Get repository metadata
        uses: varunsridharan/action-repository-meta@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
          ref: ${{ env.REPOSITORY_DEFAULT_BRANCH }}

      - name: Get package.json metadata
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: 'package.json'
          prefix: package

      - name: Get release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Update package.json version
        uses: reedyuk/npm-version@1.1.1
        with:
          version: ${{ env.RELEASE_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GCR_USERNAME }}
          password: ${{ secrets.PAT }}

      - name: Build and push docker image to Dockerhub and GCR
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_SLUG }}:${{ env.RELEASE_VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_SLUG }}:latest
            ghcr.io/${{ env.REPOSITORY_FULL_NAME }}:${{ env.RELEASE_VERSION }}
            ghcr.io/${{ env.REPOSITORY_FULL_NAME }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Dynamic template render
        uses: varunsridharan/action-dynamic-readme@main
        with:
          GLOBAL_TEMPLATE_REPOSITORY: luisfalconmx/luisfalconmx
          files: README.md
          committer_name: github-actions[bot]
          committer_email: github-actions[bot]@users.noreply.github.com
          commit_message: 'docs: update readme file [skip ci]'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Update readme badges
        uses: wow-actions/add-badges@v1.0.1
        env:
          repo_url: ${{ env.REPOSITORY_GITHUB_URL }}
          repo_name: ${{ env.REPOSITORY_SLUG }}
          repo_owner: ${{ env.REPOSITORY_OWNER }}
        with:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          center: true
          badges: |
            [
              {
                "badge": "https://img.shields.io/badge/Node%20js-${{env.package_engines_node}}-3c730f?style=for-the-badge&logo=node.js&labelColor=20232a",
                "alt": "node",
                "link": ""
              },
              {
                "badge": "https://img.shields.io/badge/react-${{env.package_dependencies_react}}-35408a?style=for-the-badge&logo=react&labelColor=20232a",
                "alt": "react",
                "link": ""
              },
              {
                "badge": "https://img.shields.io/badge/dockerhub-${{ env.RELEASE_VERSION }}-2496ED?style=for-the-badge&logo=docker&labelColor=20232a",
                "alt": "dockerhub",
                "link": "https://hub.docker.com/r/luisfalconmx/strapi"
              },
              {
                "badge": "https://img.shields.io/github/license/${{ env.REPOSITORY_FULL_NAME }}?style=for-the-badge&logo=github&labelColor=20232a&color=orange",
                "alt": "MIT License",
                "link": "${{ env.REPOSITORY_GITHUB_URL }}/blob/main/LICENSE"
              }
            ]

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.package_engines_node }}

      - name: Build project
        run: |
          yarn install --immutable
          yarn build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/
          cname: ${{ env.REPOSITORY_HOMEPAGE_URL }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'ci: deploy to gh-pages [skip ci]'

      # - name: Removing .git/COMMIT_EDITMSG file
      #   run: rm -Rf .git/COMMIT_EDITMSG

      # - name: Download artifact
      #   if: success()
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: screenshot
      #     path: .github/

      # - name: Upload Screenshot
      #   uses: EndBug/add-and-commit@v7
      #   with:
      #     author_name: github-actions[bot]
      #     author_email: github-actions[bot]@users.noreply.github.com
      #     message: 'ci: screenshot updated [skip ci]'
      #     branch: ${{ env.REPOSITORY_DEFAULT_BRANCH }}
      #     add: '.github/screenshot.png'

      - name: Push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD }}
        with:
          destination_container_repo: ${{ env.REPOSITORY_FULL_NAME }}
          provider: dockerhub
          short_description: ${{ env.REPOSITORY_DESCRIPTION }}
          readme_file: 'README.md'
