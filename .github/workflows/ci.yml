name: CI
on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    types: [opened, reopened]
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      (github.event_name == 'push' || github.event_name == 'pull_request')
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  build:
    needs: analyze
    name: Build
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      (github.event_name == 'push' || github.event_name == 'pull_request') &&
      github.ref != 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get package.json metadata
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: 'package.json'
          prefix: package

      - name: Install Dependencies
        uses: actions/setup-node@v2
        with:
          node-version: ${{env.package_engines_node}}

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

  test:
    needs: build
    name: Test
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      github.event_name == 'push' &&
      github.ref != 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{env.package_engines_node}}

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Run linters
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Generate coverage report
        uses: artiomtr/jest-coverage-report-action@v2.0-rc.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          threshold: 80

      - name: Validate min coverage
        uses: VeryGoodOpenSource/very_good_coverage@v1.2.0
        with:
          path: './coverage/lcov.info'
          min_coverage: 80
